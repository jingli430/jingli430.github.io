<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[orange theory starts today!]]></title>
    <url>%2F2018%2F04%2F21%2Forange-theory-starts%2F</url>
    <content type="text"><![CDATA[真累的半死，warmup的时候速度太快，直接在warmup就进入orange zone，导致后面十分乏力，甚至无法呼吸 要跟着老师的pace走，全神贯注老师的讲解和指令：base pace，push pace，all out pace 不要急于求成，健身是缓解焦虑的时间！【focus，descipline】 不要想着自己能成为明星学员 不要受到dashboard的干扰，忘记他比较好 这是一个60mins的HIIT，对于我来说强度挺高的，想起原来做HIIT的时候也是经过很多次后才能适应一开始的节奏，但是最后10几分钟还是没能跟下来的。现在又是从头开始请耐心 目标 (4.22 ~ 5.22) 一个月内适应每堂课至少45mins 第二个月提高到premium]]></content>
      <categories>
        <category>health</category>
      </categories>
      <tags>
        <tag>workout</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用github+hexo搭建blog]]></title>
    <url>%2F2018%2F04%2F20%2Fbuild_blog_using_hexo_on_github_pages%2F</url>
    <content type="text"><![CDATA[资源 hexo官网 搭建1. 配置站点一般hexo初始化后的站点目录结构如下 12345678910111213/blog |-- _config.yml # 站点配置文件 |-- scaffolds # 页面模板存放的目录 | |-- post.html # 博文模板 | |-- page.html # 分页模板 | \-- draft.html # 草稿模板 |-- source # 博客正文和其他源文件，404、favicon、CNAME 都应该放在这里 | |-- _posts # 存放博文的目录 | \-- _drafts # 存放草稿的目录 |-- themes # 存放主题文件夹的目录 |-- package.json # npm 依赖等 |-- node_modules # 功能依赖包 \-- .gitignore # push的时候忽略node_modules文件夹等 修改_config.yml文件，整个站点的配置主要是在这个文件中修改 123456789101112title: 博客名description: 博客简述author: 作者名url: http(s)://your.site.comroot: /your/project/path or /deploy: type: git //repo: git@github.com:userName/userName.github.io.git // ssh repo: https://github.com/userName/userName.github.io.git // https branch: gh-pages // 真正要显示的内容是放在master分支下 message: [自定义的提交信息] 2. 撰写博文每当需要撰写心得博文时，只需要执行以下命令，就可以得到一个标题和日期已经设置好的markdown文件 1hexo new [layout] &apos;博文标题&apos; # layout是可选项，表示使用哪种模板来创建页面文件，默认是post 博文结构的头部 123456789title: 博文标题date: yyyy-mm-dd # 日期是创建博文源文件时自动生成的categories:- category1- category2tags:- tag1- tag2comments: true 3. 更新 &amp; 部署站点到Github Pages1234// hexo new &apos;博文标题&apos;hexo clean # 删除之前生成的静态文件hexo generate # 生成编译后的静态站点文件hexo deploy # 部署到远程仓库 需要说明的是： 我们博客文章的编写都是Markdown文件，但是发布到github上的其实是html文件，将Markdown转换成html这个工作我们只要输入hexo generate命令即可，hexo会帮我们完成转换。 注意： 貌似目前不支持new中文名 如果发现错误 1ERROR Deployer not found: git 安装 1npm install hexo-deployer-git --save // inside the project folder 再次deploy 1hexo d 4. 本地隐藏文件夹.deploy_git 对应的是github上的内容1234567891011drwxr-xr-x 12 jing.li staff 408 Apr 21 17:01 .gitdrwxr-xr-x 3 jing.li staff 102 Apr 21 16:58 2018-rw-r--r-- 1 jing.li staff 54 Apr 21 16:58 README.mddrwxr-xr-x 4 jing.li staff 136 Apr 21 16:58 archivesdrwxr-xr-x 3 jing.li staff 102 Apr 21 16:58 categoriesdrwxr-xr-x 3 jing.li staff 102 Apr 21 16:58 cssdrwxr-xr-x 20 jing.li staff 680 Apr 21 16:58 images-rw-r--r-- 1 jing.li staff 26989 Apr 21 16:58 index.htmldrwxr-xr-x 3 jing.li staff 102 Apr 21 16:58 jsdrwxr-xr-x 16 jing.li staff 544 Apr 21 16:58 libdrwxr-xr-x 5 jing.li staff 170 Apr 21 16:58 tags 本地blog dir里面是 12345678910drwxr-xr-x 12 jing.li staff 408 Apr 21 16:49 .deploy_git-rw-r--r-- 1 jing.li staff 1900 Apr 21 16:59 _config.yml-rw-r--r-- 1 jing.li staff 174 Apr 21 16:49 db.jsondrwxr-xr-x 263 jing.li staff 8942 Apr 21 12:12 node_modules-rw-r--r-- 1 jing.li staff 103985 Apr 21 12:12 package-lock.json-rw-r--r-- 1 jing.li staff 483 Apr 21 12:12 package.jsondrwxr-xr-x 11 jing.li staff 374 Apr 21 12:39 publicdrwxr-xr-x 5 jing.li staff 170 Apr 21 11:05 scaffoldsdrwxr-xr-x 3 jing.li staff 102 Apr 21 11:05 sourcedrwxr-xr-x 4 jing.li staff 136 Apr 21 11:31 themes 展示.deploy_git 12345678910drwxr-xr-x 12 jing.li staff 408 Apr 21 17:03 .gitdrwxr-xr-x 3 jing.li staff 102 Apr 21 16:49 2018drwxr-xr-x 4 jing.li staff 136 Apr 21 16:49 archivesdrwxr-xr-x 3 jing.li staff 102 Apr 21 16:49 categoriesdrwxr-xr-x 3 jing.li staff 102 Apr 21 16:49 cssdrwxr-xr-x 20 jing.li staff 680 Apr 21 16:49 images-rw-r--r-- 1 jing.li staff 27937 Apr 21 12:39 index.htmldrwxr-xr-x 3 jing.li staff 102 Apr 21 16:49 jsdrwxr-xr-x 16 jing.li staff 544 Apr 21 16:49 libdrwxr-xr-x 5 jing.li staff 170 Apr 21 16:49 tags 5. 多PC同步现在我们了解了hexo部署的真正流程 hexo new 创建新的文章 hexo generate render 并更新public folder hexo deploy把public folder中的内容拷贝到.deploy_git 中，再git push到github github上的东西并不是blog dir里面的内容，而只是blog_dir/.deploy_git 的内容，要想在别的机器上也创造一个可以更新博客的站点，你必须把完整的blog dir拷贝到另外一台机器上 方法一：把blog dir放置在google drive里面，然后在新机器上就把google drive的blog dir拷贝过去，并安装node, git, hexo即可 方法二：把这个blog dir放在username.github.iorepo的另外一个分支下，相当于是用github代替了google drive来保存blog dir，而且它存放在同一个repo的上，方便管理和维护。 由于我现在已经创建好了blog dir，我相当于是要把这个existing的folder变成username.github.io这个repo的hexo分支 在github上的该repo下创建一个分支hexo 把这个分支hexo而不是默认的master给下载下来 1git clone -b hexo https://github.com/username/username.github.io.git aaaa aaaa是为了不跟username.github.io冲突的名字而已，反正用完之后会删掉，起什么名字都无所谓 把local blog dir放入hexo分支下 .git存放了repo所有相关的metadata，拷贝.git到username.github.io文件夹，完成导入repo的工作 12cd aaaamv .git ../username.github.io 添加db.json ， public ，.deploy_git 到.gitignore db.json是缓存文件 添加所有untracked和unstaged文件，然后push到远端的hexo 1git push origin hexo 至此 blog dir驻守username.github.io的hexo分支，用git来管理和更新 hexo分支在这里就是github本身提倡的gh-pages分支，即用来存放生成站点的source分支 blog本身的内容(deploy_git)驻守username.github.io的master分支，用hexo来管理和更新 如果你现在的blog dir是崭新的，你不妨在创建username.github.io这个repo的时候就先创建hexo分支，这样就不需要这样繁琐的补救措施 全局配置_config.xml更改主题从hexo themes找到何意的主题，clone下来，放到站点本地仓库的themes目录下，比如我现在想添加主题next，在blog dir下执行 1git clone https://github.com/iissnan/hexo-theme-next themes/next 再修改blog_config.yml文件的theme字段为对应的主题名 1theme: next 如何添加多个tags有两种多标签格式 123456tags: [a, b, c]或tags: - a - b - c 如何添加categories只有post支持分类和标签，您可以在 Front-matter 中设置。 在其他系统中，分类和标签听起来很接近，但是在 Hexo 中两者有着明显的差别：分类具有顺序性和层次性，也就是说 Foo, Bar 不等于 Bar, Foo；而标签没有顺序和层次。 12345categories:- Diarytags:- PS3- Games 分类方法的分歧 如果您有过使用WordPress的经验，就很容易误解Hexo的分类方式。WordPress支持对一篇文章设置多个分类，而且这些分类可以是同级的，也可以是父子分类。但是Hexo不支持指定多个同级分类。下面的指定方法：categories:- Diary- Life会使分类Life成为Diary的子分类，而不是并列分类。因此，有必要为您的文章选择尽可能准确的分类。 添加插件添加 sitemap 切换到你本地的 hexo 目 CIA ，在命令行窗口，输入以下命令 1npm install hexo-generator-sitemap -save 修改 _config.yml，增加以下内容 123456# ExtensionsPlugins:- hexo-generator-sitemap#sitemapsitemap: path: sitemap.xml 再执行以下命令，部署服务端 1hexo d -g 站内搜索next主题的官方文档提供了几种实现搜索服务的方式，我们就使用配置最简单的Local Search，添加百度/谷歌/本地 自定义站点内容搜索。 （1）安装 hexo-generator-searchdb，在站点目录下执行以下命令： 1$ npm install hexo-generator-searchdb --save （2）编辑全局配置文件，新增以下内容到任意位置： 12345search: path: search.xml field: post format: html limit: 10000 在主题配置文件里面的修改 12local_search: enable: true 评论系统duoshuo倒闭了，Gitment 是基于 GitHub Issues 的评论系统。支持在前端直接引入，不需要任何后端代码。可以在页面进行登录、查看、评论、点赞等操作，同时有完整的 Markdown / GFM 和代码高亮支持。尤为适合各种基于 GitHub Pages 的静态博客或项目页面。 Theme配置theme/your_theme/_config.xml选择外观样式目前 NexT 支持三种 Scheme，他们是： Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白 Mist - Muse 的紧凑版本，整洁有序的单栏外观 Pisces - 双栏 Scheme，小家碧玉似的清新 Gemini - 在Pisces的基础上以box区分各篇文章 找到主题配置文件的如下三行，其中#号表示注释，要启用哪一种样式就把#号去掉即可。 12345# Schemes#scheme: Muse#scheme: Mist#scheme: Pisces # 带sidebarscheme: Gemini # 带sidebar，每篇文章是一个单独的box[选用] Menu Settings新建tags, catagories页面 12$ hexo new page tags # 会在source/下生成tags/index.md文件$ hexo new page categories # 会在source/下生成categories/index.md文件 确认主题配置文件有 12vim current_theme/_config.xmltags: tags 加about页面TBD 加404页面TBD 显示部分文章内容方法1：如果在博客文章列表中，不想全文显示，可以增加 &lt;!-- more --&gt;, 后面的内容就不会显示在列表。 123456---front-matter---这是摘要&lt;!-- more --&gt;这是正文 这种方法可以根据文章的内容，自己在合适的位置添加 &lt; !--more--&gt; 标签，使用灵活，也是Hexo推荐的方法。 方法2：在文章中的front-matter中添加description，并提供文章摘录这种方式只会在首页列表中显示文章的摘要内容，进入文章详情后不会再显示。 方法3：自动形成摘要，在主题配置文件中添加默认截取的长度为 150 字符，可以根据需要自行设定 123auto_excerpt: enable: true length: 150 建议使用 &lt; !– more –&gt;（即第一种方式），除了可以精确控制需要显示的摘录内容以外， 这种方式也可以让 Hexo 中的插件更好的识别。 而我选用方法3的auto_excerpt = true后发现不是很美观，还是用方法1好 其他图片Markdown编辑器支持插入图片，可以直接给出图片的链接，因此我们可以将图片存放在我们hexo项目的目录下，再填写对应的路径，也可以将其存放在云服务器上，然后给出链接。 修改如图所示的网站 icon： 在博客 img 目录下找到并替换 favicon.ico 这个图标即可，图标尺寸为32x32。 Mac 上的图床神器：iPic 直接在App Store上下载，谁用谁知道！ 使用方法很简单，直接拖动图片到 P 图标上，或者选中图片按快捷键 ⌘+U，就能请示上传。 上传成功就能直接粘贴图片的URL。 图片压缩工具ImageOptim 对于我们的博客来说，图片越大，加载速度越慢。 不信你用手机打开你的博客试试~ 所以有必要对我们上传到博客网站中的图片：指的是你的头像，首页背景图片，文章背景图片等。对于博客文章中插入的图片，其实也可以压缩了再上传。 对博客中的所有图片进行压缩： 看看压缩结果，最高的一张压缩了78.7%，这简直是太可怕了！ 资源文件夹 资源（Asset）代表 source 文件夹中除了文章以外的所有文件，例如图片、CSS、JS 文件等 如果你的Hexo项目中只有少量图片，那最简单的方法就是将它们放在 source/images 文件夹中。然后通过类似于 ![](/images/image.jpg) 的方法访问它们。 如果有大量的图片，则最好使用图床，极简图床 + chrome 插件 + 七牛空间，七牛云储存提供10G的免费空间,以及每月10G的流量，存放个人博客外链图片最好不过了，七牛云储存还有各种图形处理功能、缩略图、视频存放速度也给力。 1hexo new [layout] &apos;博文标题&apos; 开启打赏功能next主题开启打赏功能很简单，我们只需要在全局配置文件中填入微信和支付宝收款二维码图片地址即可开启该功能。先到微信和支付宝将自己收款二维码图片保存，我们同样可以将其存在七牛云上，然后贴到下面的配置文件里。 123reward_comment: 坚持原创技术分享，您的支持将鼓励我继续创作！wechatpay: 微信当面付图片的urlalipay: 支付宝当面付图片的url hexo标签标签插件（Tag Plugins）是hexo自己的liquid in markdown，用于在文章中快速插入特定内容的插件 【注意】在markdown 中添加太多的hexo 标签，其实会在以后用其他编辑器预览，查看，迁移时留下诸多不变，毕竟，私有的语法意味着不兼容。不建议使用！ 问题Page是用来干什么的？ 怎样使用插件 hexo的适用场景 GitHub Pages 不支持数据库管理，所以你只能做静态页面的博客，不能像其他博客（如 WordPress）那样通过数据库管理自己的博客内容。 但是GitHub Pages 无需购置服务器，免服务器费的同时还能做负载均衡，github pages有300M免费空间。 通过 Hexo 你可以轻松地使用 Markdown 编写文章，非常符合我的口味。Markdown 真的是专门针对程序员开发的语言啊，现在感觉没有 Markdown什么都不想写。什么富文本编辑器，什么word，太麻烦了！而且样式都好丑！效率太低！ ####]]></content>
      <categories>
        <category>blogging</category>
      </categories>
      <tags>
        <tag>test</tag>
        <tag>hello</tag>
        <tag>world</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F04%2F20%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
